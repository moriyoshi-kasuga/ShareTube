services:
  frontend:
    build:
      context: frontend
      target: dev
    volumes:
      - type: bind
        source: ./frontend/src
        target: /frontend/src
    container_name: frontend
    environment:
      PORT: 25000
    ports:
      - 25000:25000
    depends_on:
      db:
        condition: service_healthy
    tty: true
  backend:
    build:
      context: backend
      target: dev
    container_name: backend
    env_file: ./backend/.env.development
    volumes:
      - type: bind
        source: ./backend/api
        target: /backend/api
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 3000:3000
    tty: true
  db:
    image: postgres:17.2-bookworm
    container_name: db
    volumes:
      - type: volume
        source: postgres_data_backend
        target: /var/lib/postgresql/data/
      # - type: bind
      #   source: ./backend/migrations
      #   target: /docker-entrypoint-initdb.d
    user: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 1s
      retries: 10

volumes:
  postgres_data_backend:
